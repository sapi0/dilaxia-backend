{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Dilaxia - OpenAPI 3.0",
    "description": "Documento dell'API per il progetto dilaxia dal gruppo 2 di quinta. Verrà aggiornato man mano.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.crihexe.com/dilaxia"
    }
  ],
  "tags": [
    {
      "name": "test",
      "description": "Lista degli endpoint di test mentre aspettiamo che ci spieghino come fare il resto"
    },
    {
      "name": "Accesso",
      "description": "Lista degli endpoint legati all'accesso e all'autenticazione"
    },
    {
      "name": "Eventi",
      "description": "Lista degli endpoint sulle operazioni e la lista di eventi"
    },
    {
      "name": "Utente",
      "description": "Lista degli endpoint legati all'utente"
    },
    {
      "name": "PathParam",
      "description": "Lista di endpoint che hanno bisogno di un parametro all'interno dell'endpoint: i cosiddetti Path Params."
    },
    {
      "name": "Admin",
      "description": "Lista degli endpoint riservati al controllo amministrativo e non accessibili dagli utenti"
    }
  ],
  "paths": {
    "/test/login": {
      "post": {
        "tags": [
          "test"
        ],
        "summary": "Login (Test)",
        "description": "Endpoint per il login di test. Funziona solamente utilizzando le credenziali dell'esempio. Essendo solo di test non va a controllare che l'utente esista veramente. Potete comunque utilizzarlo per testare il login con queste credenziali, poi quando implementeremo il login serio utilizzerete credenziali valide con un altro endpoint.",
        "requestBody": {
          "description": "Fornire lo schema dell'utente con email e password DELL'ESEMPIO, altrimenti non funziona",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "sapio.andrea@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Aldini2017!!"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Il login è andato a buon fine.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Andrea"
                    },
                    "surname": {
                      "type": "string",
                      "example": "Sapio"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Schema non valido (avete sbagliato il json nel body. Controllate che le chiavi siano giuste)"
          },
          "499": {
            "description": "Email o password non valida. Se vi esce questo errore VI RICORDO CHE DOVETE UTILIZZARE LE CREDENZIALI DELL'ESEMPIO QUI SOPRA"
          }
        }
      }
    },
    "/test/register": {
      "post": {
        "tags": [
          "test"
        ],
        "summary": "Registrazione (Test)",
        "description": "Endpoint per la registrazione di test. In questo caso funziona con qualsiasi dato inserito, a patto che sia valido secondo alcune specifiche descritte tra gli errori e le responses. Ovviamente essendo di test, l'utente non verrà registrato nel database, infatti non potrete utilizzarlo per il login.",
        "requestBody": {
          "description": "Lo schema della registrazione di test. Deve contenere obbligatoriamente tutti e 4 i campi che vedi nell'esempio. I valori possono essere cambiati, non devono essere come nell'esempio, ma devono comunque rispettare le regole per ogni campo. (Per esempio l'email deve essere valida con una @, ecc...) Vedi bene tra le responses e gli errori",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Andrea"
                  },
                  "surname": {
                    "type": "string",
                    "example": "Sapio"
                  },
                  "email": {
                    "type": "string",
                    "example": "sapio.andrea@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Aldini2017!!"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "La registrazione è andata a buon fine. In questo caso essendo di test in realtà non viene registrato alcun utente, ma questa risposta assicura che in un contesto reale avrebbe funzionato. La risposta consiste nei dati che sono stati registrati.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Andrea"
                    },
                    "surname": {
                      "type": "string",
                      "example": "Sapio"
                    },
                    "email": {
                      "type": "string",
                      "example": "sapio.andrea@gmail.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "Aldini2017!!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Schema non valido (avete sbagliato il json nel body. Controllate che le chiavi siano giuste)"
          },
          "496": {
            "description": "Nome non valido (1 <= length < 50. Solo lettere A-Z_a-z e spazi)"
          },
          "497": {
            "description": "Cognome non valido (1 <= length < 50. Solo lettere A-Z_a-z e spazi)"
          },
          "498": {
            "description": "Email non valida (5 < length < 100. Deve essere valido. Regex -> \\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)* )"
          },
          "499": {
            "description": "Password non valida (8 <= length < 50. Almeno una maiuscola e una minuscola, almeno un numero e un carattere speciale)"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Accesso"],
        "summary": "Login utente",
        "description": "Endpoint per effettuare il login dell'utente tramite email e password. Verrà settato un cookie sessione per identificare l'utente nelle altre pagine e le prossime chiamate agli altri endpoints",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Il login è stato effettuato correttamente senza alcun problema. L'utente è stato loggato e viene quindi settato un cookie sessionID per riconoscere l'utente nelle prossime pagine.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultSuccess"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": ["Accesso"],
        "summary": "Registrazione utente",
        "description": "Endpoint per effettuare la registrazione dell'utente. I campi verranno controllati per sottostare a delle regole che puoi trovare tra le responses.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "La registrazione è stata effettuata correttamente senza alcun problema. L'utente è stato registrato",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultSuccess"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/refreshSession": {
      "post": {
        "deprecated": true,
        "tags": ["Accesso"],
        "summary": "Refresh sessione utente [NON DISPONIBILE]",
        "description": "[AL MOMENTO NON DISPONIBILE PERCHE' POTREBBE NON ESSERE NECESSARIO. TODO] Endpoint per eliminare e ricreare un cookie sessione, quando l'utente rimane sul sito per un pò e il cookie sta ormai per scadere. Verrà settato un cookie sessione per identificare l'utente nelle altre pagine e le prossime chiamate agli altri endpoints",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": ["Accesso"],
        "summary": "Logout utente",
        "description": "Endpoint per effettuare il logout dell'utente, quindi la disconnessione dall'account precedentemente loggato. Verrà rimosso il cookie sessione e l'utente non sarà più identificato nelle altre pagine e le prossime chiamate agli altri endpoints",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Il logout è stato effettuato correttamente senza alcun problema. L'utente è stato disconnesso e viene quindi rimosso il cookie sessionID per deautenticate l'utente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultSuccess"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "tags": ["Eventi"],
        "summary": "Lista di eventi",
        "description": "Ottieni la lista completa di tutti i prossimi eventi.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "showPast",
            "description": "Utilizzato per ottenere insieme agli eventi futuri anche quelli ormai finiti. Default: false",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "pageSize",
            "description": "Utilizzato per dare un numero massimo di eventi mostrati per chiamata a questo endpoint. Serve a migliorare le performance. Con molti eventi da visualizzare si usa in combinazione con il parametro \"page\"",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 50
            }
          },
          {
            "name": "page",
            "description": "Utilizzato per mostrare una certa pagina contenente \"pageSize\" eventi.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornata una lista di eventi",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventList"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/events/today": {
      "get": {
        "tags": ["Eventi"],
        "summary": "Lista di eventi in un giorno",
        "description": "Ottieni una lista degli eventi di un determinato giorno.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "description": "La data del giorno di cui si vogliono ottenere gli eventi. Default: data del giorno",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "14-04-2024"
            }
          },
          {
            "name": "pageSize",
            "description": "Utilizzato per dare un numero massimo di eventi mostrati per chiamata a questo endpoint. Serve a migliorare le performance. Con molti eventi da visualizzare si usa in combinazione con il parametro \"page\"",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 50
            }
          },
          {
            "name": "page",
            "description": "Utilizzato per mostrare una certa pagina contenente \"pageSize\" eventi.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornata una lista di eventi",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventList"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/events/search": {
      "get": {
        "tags": ["Eventi"],
        "summary": "Cerca tra gli eventi",
        "description": "Esegue una query di ricerca secondo alcuni parametri per restituire una lista di eventi che combaciano.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "pageSize",
            "description": "Utilizzato per dare un numero massimo di eventi mostrati per chiamata a questo endpoint. Serve a migliorare le performance. Con molti eventi da visualizzare si usa in combinazione con il parametro \"page\"",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 50
            }
          },
          {
            "name": "page",
            "description": "Utilizzato per mostrare una certa pagina contenente \"pageSize\" eventi.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "query",
            "description": "Utilizzato per definire le keywords di ricerca",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Sport calcio"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornata una lista di eventi pertinenti alla query di ricerca",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventList"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/event": {
      "post": {
        "tags": ["Eventi"],
        "summary": "Crea un nuovo evento",
        "description": "Crea un nuovo evento inserendo tutte le informazioni su di essso. Ricorda che solo i docenti possono crearne uno.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto evento. Contiene tutti i dati dell'evento modificato. Equivale a GET /event/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/path/event/{id}": {
      "get": {
        "tags": ["Eventi", "PathParam"],
        "summary": "Informazioni su un evento con ID",
        "description": "Ottieni tutte le informazioni riguardanti un determinato evento sapendo il suo ID univoco.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "L'ID univoco di un evento.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto evento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Eventi", "PathParam"],
        "summary": "Modifica un evento con ID",
        "description": "Modifica le informazioni riguardanti un determinato evento esistente sapendo il suo ID univoco.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "L'ID univoco di un evento.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto evento. Contiene tutti i dati dell'evento modificato. Equivale a GET /event/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Eventi", "PathParam"],
        "summary": "Elimina un evento con ID",
        "description": "Elimina un determinato evento sapendo il suo ID univoco.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "L'ID univoco di un evento.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto evento contenente l'evento che è stato appena eliminato. Equivale a GET /event/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/path/event/users/{id}": {
      "get": {
        "tags": ["Eventi", "PathParam"],
        "summary": "Lista utenti iscritti ad un evento con ID",
        "description": "Ottieni la lista di utenti iscritti ad un determinato evento sapendo il suo ID univoco.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "L'ID univoco di un evento.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato una lista di utenti",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/path/event/subscribe/{id}": {
      "post": {
        "tags": ["Eventi", "PathParam"],
        "summary": "Iscriviti ad un evento con ID",
        "description": "Iscrivi l'utente loggato ad un determinato evento sapendo l'ID. Nota che l'utente che verrà iscritto è in base al session ID.",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "L'ID univoco di un evento.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto evento contenente l'evento a cui ci si è iscritti. Equivale a GET /event/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "401": {
            "description": "Utente non autorizzato. Il tipo di utente non è autorizzato ad iscriversi a questo evento. Ritorna l'evento con tutti i suoi dettagli.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "480": {
            "description": "La data di scadenza per l'iscrizione a questo evento è passata. Ritorna l'evento con tutti i suoi dettagli.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Eventi", "PathParam"],
        "summary": "Disiscriviti da un evento con ID",
        "description": "Disiscrivi l'utente loggato da un determinato evento sapendo l'ID. Nota che l'utente che verrà disiscritto è in base al session ID.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "L'ID univoco di un evento.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto evento contenente l'evento a cui ci si è disisiscritti. Equivale a GET /event/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "tags": ["Utente"],
        "summary": "Informazioni sul proprio profilo utente",
        "description": "Ottieni tutte le informazioni riguardanti il proprio profilo utente.",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto utente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMe"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Utente"],
        "summary": "Modifica i propri dati utente",
        "description": "Modifica le informazioni riguardanti il proprio utente.",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto utente. Contiene tutti i dati dell'utente modificato. Equivale a GET /user/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMe"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Utente", "Admin"],
        "summary": "Elimina il proprio profilo utente [ADMIN]",
        "description": "Elimina il proprio profilo utente.",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto utente contenente l'utente che è stato appena eliminato. Equivale a GET /user/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMe"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/me/picture": {
      "get": {
        "tags": ["Utente"],
        "summary": "Ottiene la propria immagine profilo TODO TODO TODO",
        "description": "Mostra l'immagine profilo del proprio profilo utente.",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto utente. Contiene tutti i dati dell'utente modificato. Equivale a GET /user/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMe"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Utente"],
        "summary": "Imposta la propria immagine profilo TODO TODO TODO",
        "description": "Modifica o imposta per la prima volta l'immagine profilo del proprio profilo utente.",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto utente. Contiene tutti i dati dell'utente modificato. Equivale a GET /user/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMe"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Utente"],
        "summary": "Elimina la propria immagine profilo TODO TODO TODO",
        "description": "Elimina l'immagine profilo del proprio profilo utente. Verrà impostata quella di default.",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto utente. Contiene tutti i dati dell'utente modificato. Equivale a GET /user/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMe"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Utente", "Admin"],
        "summary": "Lista di utenti [ADMIN]",
        "description": "Ottieni la lista completa di tutti gli utenti.",
        "security": [
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "pageSize",
            "description": "Utilizzato per dare un numero massimo di utenti mostrati per chiamata a questo endpoint. Serve a migliorare le performance. Con molti utenti da visualizzare si usa in combinazione con il parametro \"page\"",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 50
            }
          },
          {
            "name": "page",
            "description": "Utilizzato per mostrare una certa pagina contenente \"pageSize\" utenti.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornata una lista di utenti",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/path/user/{id}": {
      "get": {
        "tags": ["Utente", "PathParam"],
        "summary": "Informazioni su un utente con ID",
        "description": "Ottieni tutte le informazioni riguardanti un determinato utente sapendo il suo ID univoco.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "L'ID univoco di un utente.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto utente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "AdminKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      },
      "SessionCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "JSESSIONID"
      }
    },
    "schemas": {
      "LoginTestRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "sapio.andrea@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "Aldini2017!!"
          }
        }
      },
      "LoginTestResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Andrea"
          },
          "surname": {
            "type": "string",
            "example": "Sapio"
          }
        }
      },
      "RegisterTest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Andrea"
          },
          "surname": {
            "type": "string",
            "example": "Sapio"
          },
          "email": {
            "type": "string",
            "example": "sapio.andrea@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "Aldini2017!!"
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "sapio.andrea@gmail.com",
            "required": true
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "Aldini2017!!",
            "required": true
          }
        }
      },
      "Register": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Andrea",
            "required": true
          },
          "surname": {
            "type": "string",
            "example": "Sapio",
            "required": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "sapio.andrea@gmail.com",
            "required": true
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "Aldini2017!!",
            "required": true
          }
        }
      },
      "Filter": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "example": "Sport calcio",
            "required": false
          },
          "showPast": {
            "type": "boolean",
            "example": true,
            "required": false
          },
          "date": {
            "type": "string",
            "format": "date",
            "example": "14-04-2024",
            "required": false
          }
        },
        "required": false
      },
      "Event": {
        "type": "object",
        "properties": {

        }
      },
      "EventUpdate": {
        "type": "object",
        "properties": {

        }
      },
      "EventCreate": {
        "type": "object",
        "properties": {

        }
      },
      "EventList": {
        "type": "object",
        "properties": {
          "totalSize": {
            "type": "integer",
            "example": 734,
            "required": true
          },
          "pageCount": {
            "type": "integer",
            "example": 15,
            "required": true
          },
          "pageSize": {
            "type": "integer",
            "example": 50,
            "required": true
          },
          "page": {
            "type": "integer",
            "example": 1,
            "required": true
          },
          "filters": {
            "$ref": "#/components/schemas/Filter"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {

        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {

        }
      },
      "UserMe": {
        "type": "object",
        "properties": {

        }
      },
      "UserList": {
        "type": "object",
        "properties": {
          "totalSize": {
            "type": "integer",
            "example": 734,
            "required": true
          },
          "pageCount": {
            "type": "integer",
            "example": 15,
            "required": true
          },
          "pageSize": {
            "type": "integer",
            "example": 50,
            "required": true
          },
          "page": {
            "type": "integer",
            "example": 1,
            "required": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "DefaultSuccess": {
        "type": "object",
        "properties": {

        }
      },
      "DefaultError": {
        "type": "object",
        "properties": {

        }
      }
    }
  }
}