{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Dilaxia - OpenAPI 3.0",
    "description": "Documento dell'API per il progetto dilaxia dal gruppo 2 di quinta. Verrà aggiornato man mano.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.crihexe.com/dilaxia"
    }
  ],
  "tags": [
    {
      "name": "Accesso",
      "description": "Lista degli endpoint legati all'accesso e all'autenticazione"
    },
    {
      "name": "Eventi",
      "description": "Lista degli endpoint sulle operazioni e la lista di eventi"
    },
    {
      "name": "Utente",
      "description": "Lista degli endpoint legati all'utente"
    },
    {
      "name": "PathParam",
      "description": "Lista di endpoint che hanno bisogno di un parametro all'interno dell'endpoint: i cosiddetti Path Params."
    },
    {
      "name": "Admin",
      "description": "Lista degli endpoint riservati al controllo amministrativo e non accessibili dagli utenti"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": ["Accesso"],
        "summary": "Login utente",
        "description": "Endpoint per effettuare il login dell'utente tramite email e password. Verrà settato un cookie sessione per identificare l'utente nelle altre pagine e le prossime chiamate agli altri endpoints",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Il login è stato effettuato correttamente senza alcun problema. L'utente è stato loggato e viene quindi settato un cookie sessionID per riconoscere l'utente nelle prossime pagine.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultSuccess"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": ["Accesso"],
        "summary": "Registrazione utente",
        "description": "Endpoint per effettuare la registrazione dell'utente. I campi verranno controllati per sottostare a delle regole che puoi trovare tra le responses.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "La registrazione è stata effettuata correttamente senza alcun problema. L'utente è stato registrato",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultSuccess"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/password": {
      "post": {
        "tags": ["Accesso"],
        "summary": "Cambio password utente",
        "description": "Endpoint per effettuare il cambio password dell'utente. I campi verranno controllati.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChange"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Il cambio password è stato effettuato correttamente senza alcun problema.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultSuccess"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/refreshSession": {
      "post": {
        "deprecated": true,
        "tags": ["Accesso"],
        "summary": "Refresh sessione utente [NON DISPONIBILE]",
        "description": "[AL MOMENTO NON DISPONIBILE PERCHE' POTREBBE NON ESSERE NECESSARIO. TODO] Endpoint per eliminare e ricreare un cookie sessione, quando l'utente rimane sul sito per un pò e il cookie sta ormai per scadere. Verrà settato un cookie sessione per identificare l'utente nelle altre pagine e le prossime chiamate agli altri endpoints",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          }
        },
        "responses": {
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": ["Accesso"],
        "summary": "Logout utente",
        "description": "Endpoint per effettuare il logout dell'utente, quindi la disconnessione dall'account precedentemente loggato. Verrà rimosso il cookie sessione e l'utente non sarà più identificato nelle altre pagine e le prossime chiamate agli altri endpoints",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Il logout è stato effettuato correttamente senza alcun problema. L'utente è stato disconnesso e viene quindi rimosso il cookie sessionID per deautenticate l'utente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultSuccess"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "tags": ["Eventi"],
        "summary": "Lista di eventi",
        "description": "Ottieni la lista completa di tutti i prossimi eventi.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "showPast",
            "description": "Utilizzato per ottenere insieme agli eventi futuri anche quelli ormai finiti. Default: false",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": true
            }
          },
          {
            "name": "pageSize",
            "description": "Utilizzato per dare un numero massimo di eventi mostrati per chiamata a questo endpoint. Serve a migliorare le performance. Con molti eventi da visualizzare si usa in combinazione con il parametro \"page\"",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 50
            }
          },
          {
            "name": "page",
            "description": "Utilizzato per mostrare una certa pagina contenente \"pageSize\" eventi.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornata una lista di eventi",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventList"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/events/today": {
      "get": {
        "tags": ["Eventi"],
        "summary": "Lista di eventi in un giorno",
        "description": "Ottieni una lista degli eventi di un determinato giorno.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "description": "La data del giorno di cui si vogliono ottenere gli eventi. Default: data del giorno",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "14-04-2024"
            }
          },
          {
            "name": "pageSize",
            "description": "Utilizzato per dare un numero massimo di eventi mostrati per chiamata a questo endpoint. Serve a migliorare le performance. Con molti eventi da visualizzare si usa in combinazione con il parametro \"page\"",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 50
            }
          },
          {
            "name": "page",
            "description": "Utilizzato per mostrare una certa pagina contenente \"pageSize\" eventi.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornata una lista di eventi",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventList"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/events/search": {
      "get": {
        "tags": ["Eventi"],
        "summary": "Cerca tra gli eventi",
        "description": "Esegue una query di ricerca secondo alcuni parametri per restituire una lista di eventi che combaciano.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "pageSize",
            "description": "Utilizzato per dare un numero massimo di eventi mostrati per chiamata a questo endpoint. Serve a migliorare le performance. Con molti eventi da visualizzare si usa in combinazione con il parametro \"page\"",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 50
            }
          },
          {
            "name": "page",
            "description": "Utilizzato per mostrare una certa pagina contenente \"pageSize\" eventi.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "query",
            "description": "Utilizzato per definire le keywords di ricerca",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Sport calcio"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornata una lista di eventi pertinenti alla query di ricerca",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventList"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/event": {
      "post": {
        "tags": ["Eventi"],
        "summary": "Crea un nuovo evento",
        "description": "Crea un nuovo evento inserendo tutte le informazioni su di essso. Ricorda che solo i docenti possono crearne uno.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto evento. Contiene tutti i dati dell'evento modificato. Equivale a GET /event/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/path/event/{id}": {
      "get": {
        "tags": ["Eventi", "PathParam"],
        "summary": "Informazioni su un evento con ID",
        "description": "Ottieni tutte le informazioni riguardanti un determinato evento sapendo il suo ID univoco.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "L'ID univoco di un evento.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto evento",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Eventi", "PathParam"],
        "summary": "Modifica un evento con ID",
        "description": "Modifica le informazioni riguardanti un determinato evento esistente sapendo il suo ID univoco.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "L'ID univoco di un evento.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto evento. Contiene tutti i dati dell'evento modificato. Equivale a GET /event/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Eventi", "PathParam"],
        "summary": "Elimina un evento con ID",
        "description": "Elimina un determinato evento sapendo il suo ID univoco.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "L'ID univoco di un evento.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto evento contenente l'evento che è stato appena eliminato. Equivale a GET /event/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/path/event/users/{id}": {
      "get": {
        "tags": ["Eventi", "PathParam"],
        "summary": "Lista utenti iscritti ad un evento con ID",
        "description": "Ottieni la lista di utenti iscritti ad un determinato evento sapendo il suo ID univoco.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "L'ID univoco di un evento.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato una lista di utenti",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/path/event/subscribe/{id}": {
      "post": {
        "tags": ["Eventi", "PathParam"],
        "summary": "Iscriviti ad un evento con ID",
        "description": "Iscrivi l'utente loggato ad un determinato evento sapendo l'ID. Nota che l'utente che verrà iscritto è in base al session ID.",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "L'ID univoco di un evento.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto evento contenente l'evento a cui ci si è iscritti. Equivale a GET /event/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "401": {
            "description": "Utente non autorizzato. Il tipo di utente non è autorizzato ad iscriversi a questo evento. Ritorna l'evento con tutti i suoi dettagli.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "480": {
            "description": "La data di scadenza per l'iscrizione a questo evento è passata. Ritorna l'evento con tutti i suoi dettagli.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Eventi", "PathParam"],
        "summary": "Disiscriviti da un evento con ID",
        "description": "Disiscrivi l'utente loggato da un determinato evento sapendo l'ID. Nota che l'utente che verrà disiscritto è in base al session ID.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "L'ID univoco di un evento.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto evento contenente l'evento a cui ci si è disisiscritti. Equivale a GET /event/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "tags": ["Utente"],
        "summary": "Informazioni sul proprio profilo utente",
        "description": "Ottieni tutte le informazioni riguardanti il proprio profilo utente.",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto utente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMe"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Utente"],
        "summary": "Modifica i propri dati utente",
        "description": "Modifica le informazioni riguardanti il proprio utente.",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto utente. Contiene tutti i dati dell'utente modificato. Equivale a GET /user/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMe"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Utente", "Admin"],
        "summary": "Elimina il proprio profilo utente [ADMIN]",
        "description": "Elimina il proprio profilo utente.",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto utente contenente l'utente che è stato appena eliminato. Equivale a GET /user/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMe"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/me/picture": {
      "get": {
        "tags": ["Utente"],
        "summary": "Ottiene la propria immagine profilo TODO TODO TODO",
        "description": "Mostra l'immagine profilo del proprio profilo utente.",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto utente. Contiene tutti i dati dell'utente modificato. Equivale a GET /user/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMe"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Utente"],
        "summary": "Imposta la propria immagine profilo TODO TODO TODO",
        "description": "Modifica o imposta per la prima volta l'immagine profilo del proprio profilo utente.",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto utente. Contiene tutti i dati dell'utente modificato. Equivale a GET /user/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMe"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Utente"],
        "summary": "Elimina la propria immagine profilo TODO TODO TODO",
        "description": "Elimina l'immagine profilo del proprio profilo utente. Verrà impostata quella di default.",
        "security": [
          {
            "SessionCookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto utente. Contiene tutti i dati dell'utente modificato. Equivale a GET /user/{id}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMe"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Utente", "Admin"],
        "summary": "Lista di utenti [ADMIN]",
        "description": "Ottieni la lista completa di tutti gli utenti.",
        "security": [
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "pageSize",
            "description": "Utilizzato per dare un numero massimo di utenti mostrati per chiamata a questo endpoint. Serve a migliorare le performance. Con molti utenti da visualizzare si usa in combinazione con il parametro \"page\"",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 50
            }
          },
          {
            "name": "page",
            "description": "Utilizzato per mostrare una certa pagina contenente \"pageSize\" utenti.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornata una lista di utenti",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    },
    "/path/user/{id}": {
      "get": {
        "tags": ["Utente", "PathParam"],
        "summary": "Informazioni su un utente con ID",
        "description": "Ottieni tutte le informazioni riguardanti un determinato utente sapendo il suo ID univoco.",
        "security": [
          {
            "SessionCookie": []
          },
          {
            "AdminKey": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "L'ID univoco di un utente.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Viene ritornato un oggetto utente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Errore sconosciuto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "AdminKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      },
      "SessionCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "JSESSIONID"
      }
    },
    "schemas": {
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "sapio.andrea@gmail.com",
            "required": true
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "Aldini2017!!",
            "required": true
          }
        }
      },
      "Register": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Andrea",
            "required": true
          },
          "surname": {
            "type": "string",
            "example": "Sapio",
            "required": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "sapio.andrea@gmail.com",
            "required": true
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "Aldini2017!!",
            "required": true
          }
        }
      },
      "PasswordChange": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "sapio.andrea@gmail.com",
            "required": true
          },
          "currentPassword": {
            "type": "string",
            "format": "password",
            "example": "Aldini2017!!",
            "required": true
          },
          "newPassword": {
            "type": "string",
            "format": "password",
            "example": "Aldini2017!!!",
            "required": true
          }
        }
      },
      "Filter": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "example": "Sport calcio",
            "required": false
          },
          "showPast": {
            "type": "boolean",
            "example": true,
            "required": false
          },
          "date": {
            "type": "string",
            "format": "date",
            "example": "14-04-2024",
            "required": false
          }
        },
        "required": false
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 152,
            "required": true
          },
          "title": {
            "type": "string",
            "example": "40000 leghe sotto i mari",
            "required": true
          },
          "description": {
            "type": "string",
            "example": "Il libro narra la storia di...",
            "required": true
          },
          "created": {
            "type": "integer",
            "format": "timestamp",
            "example": "15/05/2024 11:04",
            "required": true
          },
          "edited": {
            "type": "integer",
            "format": "timestamp",
            "example": "16/04/2024 14:08",
            "required": true
          },
          "start": {
            "type": "integer",
            "format": "timestamp",
            "example": "10/03/1024 8:30",
            "required": true
          },
          "end": {
            "type": "integer",
            "format": "timestamp",
            "example": "25/05/2024 10:00",
            "required": true
          },
          "subscription_limit": {
            "type": "integer",
            "format": "timestamp",
            "example": "20/05/2024 8:00",
            "required": true
          },
          "capacity": {
            "type": "integer",
            "example": 15,
            "required": true
          },
          "place": {
            "type": "string",
            "example": "via riva reno",
            "required": true
          },
          "type": {
            "type": "integer",
            "example": "",
            "required": true
          },
          "creator": {
            "type": "UserDTO",
            "example": "",
            "required": true
          },
          "_public": {
            "type": "boolean",
            "example": "true",
            "required": true
          }





        }
      },
      "EventUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "Sting",
            "example": "Il GGG",
            "required": true
          },
          "description": {
            "type": "String",
            "example": "é la gara nazionale ...",
            "required": true
          },
          "start": {
            "type": "integer",
            "format": "timestamp",
            "example": "12/03/2024 10:00",
            "required": true
          },
          "end": {
            "type": "integer",
            "format": "timestamp",
            "example": "20/03/2024 10:00",
            "required": true
          },
          "subscription_limit": {
            "type": "integer",
            "format": "timestamp",
            "example": "19/03/2024 10:00",
            "required": true
          },
          "place": {
            "type": "string",
            "example": "via tizio tizio 20",
            "required": true
          },
          "_public": {
            "type": "boolean",
            "example": "false",
            "required": true
          }
        }
      },
      "EventCreate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "Sting",
            "example": "Il GGG",
            "required": true
          },
          "description": {
            "type": "String",
            "example": "é la gara nazionale ...",
            "required": true
          },
          "start": {
            "type": "integer",
            "format": "timestamp",
            "example": "12/03/2024 10:00",
            "required": true
          },
          "end": {
            "type": "integer",
            "format": "timestamp",
            "example": "20/03/2024 10:00",
            "required": true
          },
          "subscription_limit": {
            "type": "integer",
            "format": "timestamp",
            "example": "19/03/2024 10:00",
            "required": true
          },
          "place": {
            "type": "string",
            "example": "via tizio tizio 20",
            "required": true
          },
          "_public": {
            "type": "boolean",
            "example": "false",
            "required": true
          }
        }
      },
      "EventList": {
        "type": "object",
        "properties": {
          "totalSize": {
            "type": "integer",
            "example": 734,
            "required": true
          },
          "pageSize": {
            "type": "integer",
            "example": 50,
            "required": true
          },
          "page": {
            "type": "integer",
            "example": 1,
            "required": true
          },
          "filters": {
            "$ref": "#/components/schemas/Filter"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 123,
            "required": true
          },
          "name": {
            "type": "string",
            "example": "Andrea",
            "required": true
          },
          "surname": {
            "type": "string",
            "example": "Sapio",
            "required": true
          },
          "type": {
            "type": "integer",
            "example": "studente",
            "required": true
          }
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Andrea",
            "required": true
          },
          "surname": {
            "type": "string",
            "example": "Sapio",
            "required": true
          }
        }
      },
      "UserMe": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 123,
            "required": true
          },
          "name": {
            "type": "string",
            "example": "Andrea",
            "required": true
          },
          "surname": {
            "type": "string",
            "example": "Sapio",
            "required": true
          },
          "type": {
            "type": "integer",
            "example": "studente",
            "required": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "andrea.sapio@gmail.com",
            "required": true
          }
        }
      },
      "UserList": {
        "type": "object",
        "properties": {
          "totalSize": {
            "type": "integer",
            "example": 734,
            "required": true
          },
          "pageCount": {
            "type": "integer",
            "example": 15,
            "required": true
          },
          "pageSize": {
            "type": "integer",
            "example": 50,
            "required": true
          },
          "page": {
            "type": "integer",
            "example": 1,
            "required": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "DefaultSuccess": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Success!",
            "required": true
          },

        }
      },
      "DefaultError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Not implemented.",
            "required": true
          }
        }
      }
    }
  }
}